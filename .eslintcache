[{"/Users/rishidev/Documents/service-front/src/index.tsx":"1","/Users/rishidev/Documents/service-front/src/Order.tsx":"2","/Users/rishidev/Documents/service-front/src/NavBar.tsx":"3","/Users/rishidev/Documents/service-front/src/reportWebVitals.ts":"4","/Users/rishidev/Documents/service-front/src/App.tsx":"5","/Users/rishidev/Documents/service-front/src/Root.tsx":"6","/Users/rishidev/Documents/service-front/src/Faq.tsx":"7","/Users/rishidev/Documents/service-front/src/About.tsx":"8","/Users/rishidev/Documents/service-front/src/Api.tsx":"9","/Users/rishidev/Documents/service-front/src/admin/AdminLogin.tsx":"10","/Users/rishidev/Documents/service-front/src/Auth.tsx":"11"},{"size":453,"mtime":1606712945665,"results":"12","hashOfConfig":"13"},{"size":10321,"mtime":1607899691131,"results":"14","hashOfConfig":"13"},{"size":3291,"mtime":1607899693718,"results":"15","hashOfConfig":"13"},{"size":425,"mtime":1606622865216,"results":"16","hashOfConfig":"13"},{"size":276,"mtime":1606976765253,"results":"17","hashOfConfig":"13"},{"size":630,"mtime":1608182629069,"results":"18","hashOfConfig":"13"},{"size":4080,"mtime":1607884693152,"results":"19","hashOfConfig":"13"},{"size":1315,"mtime":1607885612177,"results":"20","hashOfConfig":"13"},{"size":1129,"mtime":1608183785214,"results":"21","hashOfConfig":"13"},{"size":1160,"mtime":1608185735045,"results":"22","hashOfConfig":"13"},{"size":448,"mtime":1608184658345,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"14cchg2",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rishidev/Documents/service-front/src/index.tsx",[],["50","51"],"/Users/rishidev/Documents/service-front/src/Order.tsx",["52","53"],"import React, {useEffect} from 'react'\nimport {useForm} from 'react-hook-form'\nimport Swal from 'sweetalert2'\nimport api from './Api'\n\nexport interface OrderBody {\n  name: string,\n  email: string,\n  phone: string,\n  address: string,\n  city: String,\n  state: String,\n  zip: String,\n  order: string,\n  preferredStore: string,\n}\nconst Order = () => {                             \n  const { register, handleSubmit} = useForm();\n  const listClass = 'font-semibold w-40 ml-6 text-md tracking-wide'\n    const onSubmit = async (data: OrderBody, e: any) => {\n        data.state = 'MO'\n        try {\n          const placeOrder = await api.placeOrder(data)\n          Swal.fire({\n            icon: 'success',\n            title: 'Your Order was placed sucessfully',\n            showConfirmButton: false,\n            timer: 3000\n          })\n        } catch(error){\n          console.log('Failed to send order request...')\n          console.log(error)\n          Swal.fire({\n            icon: 'error',\n            title: 'Oops...',\n            text: 'Something went wrong! Please Try Again.',\n          })\n        }\n        e.target.reset()\n  }\n  \n    return (\n      <div className=\"relative flex items-top justify-center mt-20 bg-white dark:bg-gray-900 sm:items-center sm:pt-0\">\n        <div className=\"max-w-6xl mx-auto sm:px-6 lg:px-8\">\n          <div className=\"mt-8 overflow-hidden\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2\">\n              <div className=\"p-6 mr-2 bg-gray-100 dark:bg-gray-800 sm:rounded-lg\">\n                <h1 className=\"text-4xl sm:text-5xl text-gray-800 dark:text-white font-extrabold tracking-tight\">\n                  How It Works!\n                </h1>\n                <p className=\"text-normal text-lg sm:text-2xl font-medium text-gray-600 dark:text-gray-400 mt-2\">\n                  Fill in the form to place your order\n                </p>\n                <div className=\"flex items-center mt-4 text-gray-600 dark:text-gray-400\">\n                  <ul className=\"list-disc\">\n                    <li className={listClass}>Place order</li>\n                    <li className={listClass}>We will shop</li>\n                    <li className={listClass}>Pay on delivery</li>\n                  </ul>\n                </div>\n              </div>\n\n              <form\n                onSubmit={handleSubmit(onSubmit)}\n                className=\"p-6 flex flex-col justify-center\"\n              >\n                <div className=\"flex flex-col\">\n                  <label htmlFor=\"name\" className=\"hidden\">\n                    Full Name\n                  </label>\n                  <input\n                    type=\"name\"\n                    name=\"name\"\n                    id=\"name\"\n                    autoFocus\n                    required\n                    placeholder=\"Full Name\"\n                    ref={register}\n                    className=\"w-100 mt-2 py-3 px-3 rounded-lg bg-white dark:bg-gray-800 border border-gray-400 dark:border-gray-700 text-gray-800 font-semibold focus:border-indigo-500 focus:outline-none\"\n                  />\n                </div>\n\n                <div className=\"flex flex-col mt-2\">\n                  <label htmlFor=\"email\" className=\"hidden\">\n                    Email\n                  </label>\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    required\n                    id=\"email\"\n                    placeholder=\"Email\"\n                    ref={register}\n                    className=\"w-100 mt-2 py-3 px-3 rounded-lg bg-white dark:bg-gray-800 border border-gray-400 dark:border-gray-700 text-gray-800 font-semibold focus:border-indigo-500 focus:outline-none\"\n                  />\n                </div>\n\n                <div className=\"flex flex-col mt-2\">\n                  <label htmlFor=\"tel\" className=\"hidden\">\n                    Number\n                  </label>\n                  <input\n                    type=\"tel\"\n                    name=\"phone\"\n                    id=\"phone\"\n                    required\n                    placeholder=\"Phone Number\"\n                    ref={register}\n                    className=\"w-100 mt-2 py-3 px-3 rounded-lg bg-white dark:bg-gray-800 border border-gray-400 dark:border-gray-700 text-gray-800 font-semibold focus:border-indigo-500 focus:outline-none\"\n                  />\n                </div>\n                <div className=\"flex flex-col mt-2\">\n                  <label htmlFor=\"address\" className=\"hidden\">\n                    Street\n                  </label>\n                  <input\n                    type=\"address\"\n                    name=\"address\"\n                    required\n                    id=\"address\"\n                    ref={register}\n                    placeholder=\"Street Address\"\n                    className=\"w-100 mt-2 py-3 px-3 rounded-lg bg-white dark:bg-gray-800 border border-gray-400 dark:border-gray-700 text-gray-800 font-semibold focus:border-indigo-500 focus:outline-none\"\n                  />\n                </div>\n\n                <div className=\"flex grid grid-cols-3 gap-4 mt-2\">\n                  <label htmlFor=\"city\" className=\"hidden\">\n                    City\n                  </label>\n                  <input\n                    type=\"city\"\n                    name=\"city\"\n                    required\n                    id=\"city\"\n                    placeholder=\"City\"\n                    ref={register}\n                    className=\"w-100 mt-2 py-3 px-3 rounded-lg bg-white dark:bg-gray-800 border border-gray-400 dark:border-gray-700 text-gray-800 font-semibold focus:border-indigo-500 focus:outline-none\"\n                  />\n                  <label htmlFor=\"state\" className=\"hidden\">\n                    State\n                  </label>\n                  <input\n                    type=\"state\"\n                    name=\"state\"\n                    disabled\n                    id=\"state\"\n                    value=\"MO\"\n                    placeholder=\"State\"\n                    ref={register}\n                    className=\"w-100 mt-2 py-3 px-3 rounded-lg bg-white dark:bg-gray-800 border border-gray-400 dark:border-gray-700 text-gray-800 font-semibold focus:border-indigo-500 focus:outline-none\"\n                  />\n                  <label htmlFor=\"zip\" className=\"hidden\">\n                    Zip\n                  </label>\n                  <input\n                    type=\"zip\"\n                    required\n                    name=\"zip\"\n                    id=\"zip\"\n                    placeholder=\"Zip\"\n                    ref={register}\n                    className=\"w-100 mt-2 py-3 px-3 rounded-lg bg-white dark:bg-gray-800 border border-gray-400 dark:border-gray-700 text-gray-800 font-semibold focus:border-indigo-500 focus:outline-none\"\n                  />\n                </div>\n                <div className=\"flex flex-col mt-2\">\n                  <label htmlFor=\"order\" className=\"hidden\">\n                    Order\n                  </label>\n                  <textarea\n                    name=\"order\"\n                    required\n                    placeholder=\"What would you like to order?\"\n                    ref={register}\n                    className=\"w-100 mt-2 py-3 px-3 rounded-lg bg-white dark:bg-gray-800 border border-gray-400 dark:border-gray-700 text-gray-800 font-semibold focus:border-indigo-500 focus:outline-none\"\n                  ></textarea>\n                </div>\n                <div className=\"flex flex-col mt-2\">\n                  <label htmlFor=\"tel\" className=\"hidden\">\n                    Preferred Grocery Store\n                  </label>\n                  <select\n                    name=\"preferredStore\"\n                    className=\"w-100 mt-2 py-3 px-3 rounded-lg bg-white dark:bg-gray-800 border border-gray-400 dark:border-gray-700 text-gray-800 font-semibold focus:border-indigo-500 focus:outline-none\"\n                    ref={register}\n                  >\n                    <option value=\"\">Preferred Grocery Store</option>\n                    <option value=\"seema\">Seema</option>\n                    <option value=\"desi-bazaar\">Desi Bazaar</option>\n                  </select>\n                </div>\n                <div className=\"flex flex-col mt-2\">\n                  <label htmlFor=\"tel\" className=\"hidden\">\n                    Terms and Conditions\n                  </label>\n                  <div className=\"flex\">\n                    <div>\n                      <input\n                        type=\"checkbox\"\n                        required={true}\n                        name=\"terms\"\n                        ref={register}\n                      />\n                    </div>\n                    <div className=\"pl-2\">\n                      I agree to GGhar{\" \"}\n                      <span\n                        className=\"text-blue-800 cursor-pointer\t\"\n                        onClick={() => {\n                          Swal.fire({\n                            title: \"Terms of Service\",\n                            text: \"asdfjalsdjflajsdlfjalsdfjlasjdflajdslfjalsjdlajsdlfjalsdjflajsdflajsdlfjalsdjflajsdflajsdlfj\"\n                          });\n                        }}\n                      >\n                        {\" \"}\n                        Terms of Service{\" \"}\n                      </span>{\" \"}\n                      and{\" \"}\n                      <span\n                        className=\"text-blue-800 cursor-pointer\t\"\n                        onClick={() => {\n                          Swal.fire({\n                            title: \"Privacy Policy\",\n                            html: '<h1> yeah!! </h1>'\n                          });\n                        }}\n                      >\n                        {\" \"}\n                        Privacy Policy\n                      </span>\n                    </div>\n                  </div>\n                </div>\n\n                <button\n                  type=\"submit\"\n                  className=\"md:w-32 bg-indigo-600 hover:bg-blue-dark text-white font-bold py-3 px-6 rounded-lg mt-3 hover:bg-indigo-500 transition ease-in-out duration-300\"\n                >\n                  Submit\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n}\n\nexport default Order","/Users/rishidev/Documents/service-front/src/NavBar.tsx",[],"/Users/rishidev/Documents/service-front/src/reportWebVitals.ts",[],["54","55"],"/Users/rishidev/Documents/service-front/src/App.tsx",[],"/Users/rishidev/Documents/service-front/src/Root.tsx",[],["56","57"],"/Users/rishidev/Documents/service-front/src/Faq.tsx",[],"/Users/rishidev/Documents/service-front/src/About.tsx",[],"/Users/rishidev/Documents/service-front/src/Api.tsx",[],"/Users/rishidev/Documents/service-front/src/admin/AdminLogin.tsx",[],"/Users/rishidev/Documents/service-front/src/Auth.tsx",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":16,"nodeType":"64","messageId":"65","endLine":1,"endColumn":25},{"ruleId":"62","severity":1,"message":"66","line":23,"column":17,"nodeType":"64","messageId":"65","endLine":23,"endColumn":27},{"ruleId":"58","replacedBy":"67"},{"ruleId":"60","replacedBy":"68"},{"ruleId":"58","replacedBy":"69"},{"ruleId":"60","replacedBy":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'placeOrder' is assigned a value but never used.",["71"],["72"],["71"],["72"],"no-global-assign","no-unsafe-negation"]